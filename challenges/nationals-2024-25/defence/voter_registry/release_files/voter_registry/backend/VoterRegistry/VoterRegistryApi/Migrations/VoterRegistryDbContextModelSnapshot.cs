// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VoterRegistryApi.Database;

#nullable disable

namespace VoterRegistryApi.Migrations
{
    [DbContext(typeof(VoterRegistryDbContext))]
    partial class VoterRegistryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:CollationDefinition:case_insensitive", "en-u-ks-primary,en-u-ks-primary,icu,False")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VoterRegistryApi.Models.Advisory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "message");

                    b.Property<int>("PollingStationId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.HasKey("Id");

                    b.HasIndex("PollingStationId");

                    b.ToTable("Advisories");

                    b.HasAnnotation("Relational:JsonPropertyName", "advisories");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.PollingStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "city");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "state");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "street_name");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "street_number");

                    b.HasKey("Id");

                    b.ToTable("PollingStations");

                    b.HasAnnotation("Relational:JsonPropertyName", "polling_station");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.RegisteredPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "birthdate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<string>("PhotoIdNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "photo_id_number");

                    b.Property<string>("RegistrationAddressNumber")
                        .HasColumnType("text");

                    b.Property<int?>("RegistrationAddressStreetId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegistrationFile")
                        .HasColumnType("text");

                    b.Property<bool>("RegistrationFileApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("RegistrationFileMatchesInfo")
                        .HasColumnType("boolean");

                    b.Property<bool>("RegistrationFileReviewed")
                        .HasColumnType("boolean");

                    b.Property<int?>("RegistrationNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PhotoIdNumber")
                        .IsUnique();

                    b.HasIndex("RegistrationAddressStreetId");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.ToTable("RegisteredPersons");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.Street", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "city");

                    b.Property<int>("PollingStationId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "state");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("case_insensitive")
                        .HasAnnotation("Relational:JsonPropertyName", "street_name");

                    b.HasKey("Id");

                    b.HasIndex("PollingStationId");

                    b.ToTable("Streets");

                    b.HasAnnotation("Relational:JsonPropertyName", "streets");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.Advisory", b =>
                {
                    b.HasOne("VoterRegistryApi.Models.PollingStation", "PollingStation")
                        .WithMany("Advisories")
                        .HasForeignKey("PollingStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PollingStation");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.RegisteredPerson", b =>
                {
                    b.HasOne("VoterRegistryApi.Models.Street", "RegistrationAddressStreet")
                        .WithMany()
                        .HasForeignKey("RegistrationAddressStreetId");

                    b.Navigation("RegistrationAddressStreet");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.Street", b =>
                {
                    b.HasOne("VoterRegistryApi.Models.PollingStation", "PollingStation")
                        .WithMany("Streets")
                        .HasForeignKey("PollingStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PollingStation");
                });

            modelBuilder.Entity("VoterRegistryApi.Models.PollingStation", b =>
                {
                    b.Navigation("Advisories");

                    b.Navigation("Streets");
                });
#pragma warning restore 612, 618
        }
    }
}
